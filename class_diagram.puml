@startuml
skinparam classAttributeIconSize 0
Game -- rules.MiddleLayer: HTTP

package rules {
ScoreBoard -- Puntaction
ScoreBoard -- ScoreBoardTable
Server -- State
MiddleLayer -- Server
MiddleLayer -- ScoreBoard
ScoreBoardTable -- ScoreRecord
Server -- Hint


class ScoreBoard {
  -Punctation: enum
  -ScoreBoardTable: class
  -updateScoreBoard()
  +countScore()
  +showScoreBoard(): class ScoreboardTable
}

enum Puntaction {
 +MAXIMUM_ATTEMPTS: int 14
 +CORRECT_PLANET_CORRECT_POSITION: int 2
 +CORRECT_PLANET_WRONG_POSITION: int 1
}

class ScoreBoardTable {
  -ScoreRecords[]
}

class ScoreRecord {
  -position: int
  -score: int
  -attempts: int
  -name: String
  -time: class Timestamp
}

class Server {
  -code: ArrayList<int[8]> 
  -State: enum
  +generateCode()  
  +rateAttempt(user_answer): Hint 
  +isEndGame(): bool
}

class Hint {
  int colorAndPositionGusssed
  int onlyColorGuessed
}

json JSON {
   "state":"win/lose/continue",
   "rates":"<0, 8>W, <0, 8>B"
}

enum State {
 +WIN
 +LOSE
 +CONTINUE
}

class MiddleLayer {
  -Server: class Server
  -ScoreBoard: class ScoreBoard
  +rateAttempt(user_answer): enum State, String int [2] 
}

}
class Game {
  -endGame: bool False
  -codeLength: int 0
  -numberAttempts: int 0
  -MiddleLayer: class MiddleLayer
  +UserInput
  -startGame()
  -personalizeGame()  
}

interface UserInput {
  #getUserCode(): ArrayList<int[]> 
}

class UserGui implements UserInput {
}
@enduml
